@model IEnumerable<TestViewModel>
@{
    ViewData["Title"] = "Tests";
    const int rowsNumber = 10;
}

<div class="text-center">

    @await Html.PartialAsync("_Form", new UserInputModel())

    <div class="row mt-5 table-responsive d-flex">
        <table class="table table-bordered" id="testsTable">
            <thead>
                <tr>
                    <th scope="col">№</th>
                    <th scope="col">Url</th>
                    <th scope="col">Time of the test</th>
                    <th scope="col">Information about the test</th>
                </tr>
            </thead>
            <tbody>
                @{
                    var i = (int)ViewData["NumberPage"] * rowsNumber - 9;
                }
                @foreach (var obj in Model)
                {
                    <tr>
                        <th scope="row">@(i++)</th>
                        <td>@obj.Url</td>
                        <td>@obj.SaveTime</td>
                        <td><a asp-controller="Result" asp-action="Index" asp-route-id="@obj.Id">More info</a></td>
                    </tr>
                }
            </tbody>
        </table>

        <nav aria-label="Page navigation example" style="margin:auto">
            <ul class="pagination">
                <li class="page-item">
                    <a class="page-link" asp-controller="Home" asp-action="GetPreviousPage" asp-route-numberPage="@ViewData["NumberPage"]" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Previous</span>
                    </a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-controller="Home" asp-action="GetNextPage" asp-route-numberPage="@ViewData["NumberPage"]" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Next</span>
                    </a>
                </li>
            </ul>
            <h4>@ViewData["NumberPage"] of @(Math.Ceiling((double)((IEnumerable<TestViewModel>)ViewData["AllTests"]).Count() / rowsNumber))</h4>
        </nav>
    </div>
</div>

